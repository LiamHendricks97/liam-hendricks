
/* selector {
    property: value;
} */




html{
    scroll-behavior: smooth;
}
body {
    margin: 0;
    background-image: url(../images/bg.jpg);
    background-size: cover;
    background-repeat: no-repeat;
    background-attachment: fixed;
}




/* GRID LAYOUT AND STYLING *******************************************************************************************************************************/
.gridcontainer {
    display: grid;
    row-gap: 3.125rem;
    column-gap: 12% ;
    grid-template-columns: 1% 45% 18% 0%;
    grid-template-rows: 37.5rem auto auto 3.125rem;
    grid-template-areas: 
        'header header header header'
        'aside main main blank'
        'aside main main blank'
        'footer footer footer footer';
}

.header {
    grid-area: header;
    background-color: rgba(0, 0, 0, 0.774);
    background-image: url(../images/beg.jpg);
    background-size: cover;
    background-repeat: no-repeat;
    /* top: 0;
    position: sticky; */
}

.aside {
    grid-area: aside ;
    background-color: rgb(255, 255, 255);
    /* color: rgba(88, 224, 224, 0.747) !important;       doesnt work */
    position: sticky;
    top: 0%;
    height: 50%;
    width: 120%;
    transition: width 0.5s ease-out ;
    /* visibility: hidden; */  
    
}
        .aside:hover {
            grid-area: aside;
            background-color: rgb(26, 24, 24);
            position: sticky;
            top: 0%;
            height:600px;
            width: 1300%;
            transition: width 0.5s ease-out;
            z-index: 1
        }

.main {
    grid-area: main;
    background-color: #fff;
    z-index: 0;
}

.footer {
    grid-area: footer;
    background-color: rgb(0, 128, 128);
    z-index: 2;
}
/* GRID LAYOUT AND STYLING END************************************************************************************************************************** */




/* TITLE AND NAVBAR STYLING***************************************************************************************************************************** */
.mainHeading {
    font-size: 4.6875rem;
    color: rgb(0, 0, 0);
    letter-spacing: 1.25rem;
    text-align: center;
    background-color: #fff;
    top: 0;
    position: sticky;
}
/* NOTE HOW IT BECAME A STICKY!!! */


/* sidebar style */
nav ul li {
    font-size: 20px;
    list-style-type: none;
    padding: 3.25rem 0 0 0;
    overflow: hidden;
}
ul {
    padding: 0 0 0 1.375rem;
}
a {
    text-decoration: none;
    color: rgb(255, 255, 255);
}
nav ul li a {
    text-decoration: none;
    color: white;
}
nav ul li a:hover {
    color: #ff6b6c;
    transition: 350ms;
}
nav ul li a:active {
    color: #ffc145;
    transition: 0 
}
nav ul li a:link {
    color: white;
}
/* TITLE AND NAVBAR STYLING END************************************************************************************************************************* */




/* ARTICLE STYLE**************************************************************************************************************************************** */
.headerarticle {
    font-size: 3.125rem;
    font-family: 'Tinos', serif;
    /* padding-left: 3%; */
    text-align: center;
}
.article {
    padding: 0 1.5625rem 0 1.5625rem;
    font-size: 1.0625rem;
    font-family: 'Quicksand', sans-serif;
}
.columns {
    column-count: 2;
    column-width: 20%;
}
p {
    margin-top: 0%;
}
/* ARTICLE STYLE END************************************************************************************************************************************ */




/* HTML CSS and JAVA logo's***************************************************************************************************************************** */
.skillsContainer {
    display: grid;
    grid-template-columns: 30% 30% 30%;
    gap: 5%;
    grid-template-rows: 200px;
    justify-items: center;
    grid-template-areas: 
        'htmlLogoContainer cssLogoContainer javaLogoContainer';
}
    .htmlLogoContainer {
        grid-area: htmlLogoContainer;
    }
    .cssLogoContainer {
        grid-area: cssLogoContainer;
    }
    .javaLogoContainer {
        grid-area: javaLogoContainer;
    }
/* justify items and align items apply respectively centers the items horizontaly and vertically but mostly evenly amongst the grid  */
/* justify content and align content instead tends to move the content as a collective, thus keeping its rowgap and column gap */
/* justify self and align self applies above to only a specific block within a grid */
/* Notes link: https://alligator.io/css/align-justify/ */
/* LOGO STYLE END*************************************************************************************************************************************** */




/* PORTFOLIO CONTAINER AND STYLING********************************************************************************************************************** */
    /* Below code should be able to be done via the [transform: scale();] selector but at the cost of losing some specialities that the grid offers */
.portfolioContainer {
    display: grid;
    /* row-gap: 20px; */
    /* column-gap: 1px
    z-index: 5;; */
    grid-template-columns: 25% 25% 25% 25%;
    grid-template-rows: 200px 200px ;
    justify-items: center;
    align-items: center;
    grid-template-areas: 
    'port1 port2 port3 port4'
    'port5 port6 port7 port8';
}
/* use alt and mouse to add code to below items simultaneously */
    .port1,
    /* .port2,
    .port3,
    .port4,
    .port5,
    .port6,
    .port7,
    .port8  */
    .port1 {
        grid-area: port1;
        position: relative;
        width: 160px;
        height: 160px;
        background-color: black;
        z-index: 5;
        transition-property: width, height;
        transition-duration: 250ms;
        transition-timing-function: linear;

    }
    .port2 {
        grid-area: port2;
        position: relative;
        width: 160px;
        height: 160px;
        background-color: rgb(53, 45, 45);
        z-index: 5;
        transition-property: width, height;
        transition-duration: 250ms;
        transition-timing-function: linear;

    }
    .port3 {
        grid-area: port3;
        position: relative;
        width: 160px;
        height: 160px;
        background-color: rgb(87, 71, 71);
        z-index: 5;
        transition-property: width, height;
        transition-duration: 250ms;
        transition-timing-function: linear;

    }
    .port4 {
        grid-area: port4;
        position: relative;
        width: 160px;
        height: 160px;
        background-color: rgb(117, 76, 76);
        z-index: 5;
        transition-property: width, height;
        transition-duration: 250ms;
        transition-timing-function: linear;

    }
    .port5 {
        grid-area: port5;
        position: relative;
        width: 160px;
        height: 160px;
        background-color: rgb(59, 49, 49);
        z-index: 5;
        transition-property: width, height;
        transition-duration: 250ms;
        transition-timing-function: linear;

    }
    .port6 {
        grid-area: port6;
        position: relative;
        width: 160px;
        height: 160px;
        background-color: rgb(116, 71, 71);
        z-index: 5;
        transition-property: width, height;
        transition-duration: 250ms;
        transition-timing-function: linear;

    }
    .port7 {
        grid-area: port7;
        position: relative;
        width: 160px;
        height: 160px;
        background-color: rgb(138, 68, 68);
        z-index: 5;
        transition-property: width, height;
        transition-duration: 250ms;
        transition-timing-function: linear;

    }
    .port8 {
        grid-area: port8;
        position: relative;
        width: 160px;
        height: 160px;
        background-color: rgb(199, 43, 43);
        z-index: 5;
        transition-property: width, height;
        transition-duration: 250ms;
        transition-timing-function: linear;

    }

    
    .port1:hover {
        grid-area: port1;
        width: 280px;
        height: 280px;
        z-index: 10;
        /* transition: width 1s ease-in, height 2s ease-in; */
        transition-property: width, height;
        transition-duration: 250ms;
        transition-timing-function: linear;
    }
    .port2:hover {
        grid-area: port2;
        width: 280px;
        height: 280px;
        z-index: 10;
        /* transition: width 1s ease-in, height 2s ease-in; */
        transition-property: width, height;
        transition-duration: 250ms;
        transition-timing-function: linear;
    }
    .port3:hover {
        grid-area: port3;
        width: 280px;
        height: 280px;
        z-index: 10;
        /* transition: width 1s ease-in, height 2s ease-in; */
        transition-property: width, height;
        transition-duration: 250ms;
        transition-timing-function: linear;
    }
    .port4:hover {
        grid-area: port4;
        width: 280px;
        height: 280px;
        z-index: 10;
        /* transition: width 1s ease-in, height 2s ease-in; */
        transition-property: width, height;
        transition-duration: 250ms;
        transition-timing-function: linear;
    }
    .port5:hover {
        grid-area: port5;
        width: 280px;
        height: 280px;
        z-index: 10;
        /* transition: width 1s ease-in, height 2s ease-in; */
        transition-property: width, height;
        transition-duration: 250ms;
        transition-timing-function: linear;
    }
    .port6:hover {
        grid-area: port6;
        width: 280px;
        height: 280px;
        z-index: 10;
        /* transition: width 1s ease-in, height 2s ease-in; */
        transition-property: width, height;
        transition-duration: 250ms;
        transition-timing-function: linear;
    }
    .port7:hover {
        grid-area: port7;
        width: 280px;
        height: 280px;
        z-index: 10;
        /* transition: width 1s ease-in, height 2s ease-in; */
        transition-property: width, height;
        transition-duration: 250ms;
        transition-timing-function: linear;
    }
    .port8:hover {
        grid-area: port8;
        width: 280px;
        height: 280px;
        z-index: 10;
        /* transition: width 1s ease-in, height 2s ease-in; */
        transition-property: width, height;
        transition-duration: 250ms;
        transition-timing-function: linear;
    }
/* PORTFOLIO STYLE AND CONTAINER END******************************************************************************************************************** */



/* I still need to decide on whether or not to keep this as usable style that other elements can use (as a sort of hack? p tag for column did something similar) or to change it to a once-off ID */
.noPadMargin {
    margin-top: 0;
    padding-top: 0;
}


/* WORK TO STILL DO AND IDEA BIN */
/* need to figure out way to resize boxes within parameters (edit: do we tho?) */

/* when resizing horizontally and vertically, the gap needs to get smaller. We need to find out how to go about doing so. */
    /* Fix to above problem is by giving adequate space to to grid item within container on all sides and then using the justify and align. Above babbling about gap sizes has be come irrelevent */
/* BUT, I now want boxes to overlap one anouther. Adding borders can help with making it more neat */

/* I need to adjust and add the necessary grid blocks so that my sticky header actually work. */
    /* for code quality, lets group the ports eg    .port1,
                                                    .port2,
                                                    .port3,
                                                    .etc */
/* make text colour in header transparent using zindex */